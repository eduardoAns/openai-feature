import Head from 'next/head'
import { Inter } from 'next/font/google'
import styles from '@/styles/Home.module.css'
import { Button, FormControl, FormLabel, Input, InputGroup, Text } from '@chakra-ui/react'
import cohere from 'cohere-ai';
import { useState } from 'react';
import { Configuration, OpenAIApi } from 'openai';

const inter = Inter({ subsets: ['latin'] })

export default function Home() {

  cohere.init('qCCqPcRJyskarlBDzaWtfP6Ulq7e1fsWhuNGnEaY'); // This is your trial API key
  
  const [textGenerateList, setTextGenerateList]  = useState<string[]>()
  const [isLoading, setisLoading] = useState(false)
  const [topicInput, setTopicInput] = useState<string>()
  const [isError, setIsError] = useState(false)
   
  const openiResponse = async(e:any) => {

    e.preventDefault()
    setisLoading(true)
    const configuration = new Configuration({
      apiKey: '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'
    });

    const openai = new OpenAIApi(configuration);
    const response = await openai.createCompletion({
      model: "text-davinci-003",
      prompt: `Genera una introduccion de tipo informe escolar de minimo 100 palabras y maximo 200 palabras. Considera redactarlo como una persona entre 15 y 18 años. El tema es: ${topicInput}. Los subtemas son: tratamiento de enfermedades crónicas, desarrollo de herramientas tecnológicas y la tecnología de energía eólica  `,
      temperature: 1,
      max_tokens: 2000,
    });

    const textResponse = response.data.choices[0].text
    const responseList = textResponse?.split("\n\n")
    console.log(textResponse)
    setTextGenerateList(responseList);
    setisLoading(false)
  }

  const handleInput = (e:any) => {
    setIsError(false)
    if(e.target.value.length < 3) {
      setIsError(true)
    }
    setTopicInput(e.target.value)
}
  

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <Text fontSize={'3xl'}> Generador de introduccion para informes escolares.</Text>

        <form onSubmit={openiResponse}>

          <FormControl isRequired mb={2}>
            <FormLabel>Tema </FormLabel>

            <InputGroup>
              <Input 
                autoFocus
                name="topicInput"
                value={topicInput}
                type="text"             
                placeholder="Topic" 
                onChange={handleInput}
                width={'xl'}
              />
            </InputGroup>
          </FormControl >
          {isError ? <Text>minimo 3 palabras</Text>:''}
          <Button type='submit'>genera open-ai</Button>
        </form>

        { isLoading ? 
          <Text>Cargando...</Text> : 
          textGenerateList?.map((textGenerate)=>( <Text>{textGenerate}</Text>))
        }

      </main>
    </>
  )
}
